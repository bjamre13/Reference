// âœ… MODIFIED VERSION FOR TS >=3.2.1 and <3.5.0 COMPATIBILITY

// Note: This version avoids Omit, as const, advanced tuple inference, etc.

// --- src/components/TicketCard.tsx --- import React from 'react';

interface TicketProps { id: number; subject: string; priority: string; status: string; createdAt: string; agentName?: string; onClick?: () => void; }

const TicketCard: React.FC<{ ticket: TicketProps }> = ({ ticket }) => { const getBgColor = (priority: string): string => { switch (priority) { case 'HIGH': return 'bg-red-200'; case 'MEDIUM': return 'bg-yellow-200'; default: return 'bg-green-200'; } };

return ( <div className="border rounded-lg p-4 mb-3 shadow hover:bg-gray-50 cursor-pointer" onClick={ticket.onClick}> <div className="flex justify-between"> <h3 className="text-lg font-semibold">{ticket.subject}</h3> <span className={px-2 py-1 text-sm rounded-full ${getBgColor(ticket.priority)}}> {ticket.priority} </span> </div> <p className="text-sm text-gray-600 mt-1">Status: {ticket.status}</p> <p className="text-sm text-gray-600">Created: {new Date(ticket.createdAt).toLocaleDateString()}</p> {ticket.agentName && <p className="text-sm text-gray-600">Agent: {ticket.agentName}</p>} </div> ); };

export default TicketCard;

// --- src/pages/Login.tsx --- import React, { useState } from 'react'; import axios from 'axios'; import { useNavigate } from 'react-router-dom';

const Login: React.FC = () => { const [email, setEmail] = useState(''); const [password, setPassword] = useState(''); const navigate = useNavigate();

const handleLogin = async () => { try { const response = await axios.post('/api/auth/login', { email, password }); localStorage.setItem('token', response.data.token); navigate('/dashboard'); } catch (error) { alert('Login failed'); } };

return ( <div className="flex flex-col items-center justify-center min-h-screen"> <h2 className="text-2xl font-semibold mb-4">Login</h2> <input className="border mb-2 p-2" type="email" placeholder="Email" value={email} onChange={e => setEmail(e.target.value)} /> <input className="border mb-2 p-2" type="password" placeholder="Password" value={password} onChange={e => setPassword(e.target.value)} /> <button className="bg-blue-500 text-white px-4 py-2" onClick={handleLogin}>Login</button> </div> ); };

export default Login;

// --- src/pages/Dashboard.tsx --- import React from 'react'; import TicketList from './TicketList';

const Dashboard: React.FC = () => { return ( <div className="p-4"> <h1 className="text-xl font-bold mb-4">Dashboard</h1> <TicketList /> </div> ); };

export default Dashboard;

// --- src/pages/TicketList.tsx --- import React, { useEffect, useState } from 'react'; import TicketCard from '../components/TicketCard'; import axios from 'axios'; import { useNavigate } from 'react-router-dom';

interface Ticket { id: number; subject: string; priority: string; status: string; createdAt: string; agentName?: string; }

const TicketList: React.FC = () => { const [tickets, setTickets] = useState<Ticket[]>([]); const navigate = useNavigate();

useEffect(() => { const fetchTickets = async () => { const res = await axios.get('/api/tickets', { headers: { Authorization: Bearer ${localStorage.getItem('token')} } }); setTickets(res.data); }; fetchTickets(); }, []);

return ( <div> {tickets.map(ticket => ( <TicketCard key={ticket.id} ticket={{ ...ticket, onClick: () => navigate(/tickets/${ticket.id}) }} /> ))} </div> ); };

export default TicketList;

// --- src/pages/TicketDetails.tsx --- import React, { useEffect, useState } from 'react'; import { useParams } from 'react-router-dom'; import axios from 'axios';

interface TicketDetail { id: number; subject: string; description: string; status: string; priority: string; }

const TicketDetails: React.FC = () => { const { id } = useParams<{ id: string }>(); const [ticket, setTicket] = useState<TicketDetail | null>(null);

useEffect(() => { const fetchTicket = async () => { const res = await axios.get(/api/tickets/${id}, { headers: { Authorization: Bearer ${localStorage.getItem('token')} } }); setTicket(res.data); }; fetchTicket(); }, [id]);

if (!ticket) return <div>Loading...</div>;

return ( <div className="p-4"> <h2 className="text-xl font-bold">{ticket.subject}</h2> <p>{ticket.description}</p> <p>Status: {ticket.status}</p> <p>Priority: {ticket.priority}</p> </div> ); };

export default TicketDetails;

// --- src/pages/TicketForm.tsx --- import React, { useState } from 'react'; import axios from 'axios';

const TicketForm: React.FC = () => { const [subject, setSubject] = useState(''); const [description, setDescription] = useState(''); const [priority, setPriority] = useState('LOW');

const handleSubmit = async () => { await axios.post('/api/tickets', { subject, description, priority }, { headers: { Authorization: Bearer ${localStorage.getItem('token')} } }); alert('Ticket submitted'); };

return ( <div className="p-4"> <h2 className="text-xl font-bold mb-4">Create Ticket</h2> <input className="border mb-2 p-2 block" placeholder="Subject" value={subject} onChange={e => setSubject(e.target.value)} /> <textarea className="border mb-2 p-2 block" placeholder="Description" value={description} onChange={e => setDescription(e.target.value)} /> <select value={priority} onChange={e => setPriority(e.target.value)} className="border mb-2 p-2 block"> <option value="LOW">LOW</option> <option value="MEDIUM">MEDIUM</option> <option value="HIGH">HIGH</option> <option value="URGENT">URGENT</option> </select> <button onClick={handleSubmit} className="bg-green-500 text-white px-4 py-2">Submit</button> </div> ); };

export default TicketForm;

// --- src/services/api.ts --- import axios from 'axios';

const api = axios.create({ baseURL: '/api', });

export default api;

// --- src/App.tsx --- import React from 'react'; import { BrowserRouter, Routes, Route } from 'react-router-dom'; import Login from './pages/Login'; import Dashboard from './pages/Dashboard'; import TicketDetails from './pages/TicketDetails'; import TicketForm from './pages/TicketForm';

const App: React.FC = () => { return ( <BrowserRouter> <Routes> <Route path="/" element={<Login />} /> <Route path="/dashboard" element={<Dashboard />} /> <Route path="/tickets/:id" element={<TicketDetails />} /> <Route path="/tickets/new" element={<TicketForm />} /> </Routes> </BrowserRouter> ); };

export default App;

// --- src/main.tsx --- import React from 'react'; import ReactDOM from 'react-dom'; import App from './App'; import './index.css';

ReactDOM.render( <React.StrictMode> <App /> </React.StrictMode>, document.getElementById('root') );

